name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Enable debug mode'
        required: false
        default: false

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        shard: [1, 2, 3, 4]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps ${{ matrix.browser }}

      - name: Build application
        run: pnpm run build

      - name: Run Playwright tests
        run: |
          pnpm exec playwright test \
            --project=${{ matrix.browser }} \
            --shard=${{ matrix.shard }}/4 \
            --reporter=json,html
        env:
          CI: true
          BASE_URL: http://localhost:3000/CRUDkit

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results-${{ matrix.browser }}-${{ matrix.shard }}
          path: |
            test-results/
            playwright-report/
          retention-days: 30

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        if: matrix.browser == 'chromium' && matrix.shard == 1
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  report:
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: playwright-results-*
          path: all-results/

      - name: Merge test results
        run: |
          mkdir -p merged-results
          pnpm exec playwright merge-reports --reporter html ./all-results

      - name: Upload merged HTML report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read test results
            const resultsPath = './all-results';
            let totalTests = 0;
            let passedTests = 0;
            let failedTests = 0;

            // Parse JSON reports
            const files = fs.readdirSync(resultsPath);
            files.forEach(file => {
              if (file.endsWith('.json')) {
                const data = JSON.parse(fs.readFileSync(path.join(resultsPath, file), 'utf8'));
                totalTests += data.tests?.length || 0;
                passedTests += data.tests?.filter(t => t.status === 'passed').length || 0;
                failedTests += data.tests?.filter(t => t.status === 'failed').length || 0;
              }
            });

            const comment = `## üé≠ Playwright E2E Test Results

            - ‚úÖ **Passed:** ${passedTests}
            - ‚ùå **Failed:** ${failedTests}
            - üìä **Total:** ${totalTests}

            [View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            http://localhost:3000/CRUDkit
            http://localhost:3000/CRUDkit/themes
            http://localhost:3000/CRUDkit/components
          uploadArtifacts: true
          temporaryPublicStorage: true